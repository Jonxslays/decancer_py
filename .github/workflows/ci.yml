name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  test-rust:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust_version: ["1.46.0", stable, nightly]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install rust ${{ matrix.rust_version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}

      - name: Run tests
        run: cargo test

  test-python:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: Gr1N/setup-poetry@v7

      - name: Run test
        run: |
          pip install -U pip
          poetry install -q
          poetry run nox -s tests

  linux-x86:
    needs: test-python
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          manylinux: auto
          command: build
          args: '--release -i 3.7 3.8 3.9 3.10 --sdist -o dist'

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux-i686:
    needs: test-python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: i686
          manylinux: auto
          command: build
          args: '--release -i 3.7 3.8 3.9 3.10 -o dist'

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux-armv7:
    needs: test-python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: armv7
          manylinux: auto
          command: build
          args: '--release -i 3.7 3.8 3.9 3.10 -o dist'

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux-aarch64:
    needs: test-python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: aarch64
          manylinux: auto
          command: build
          args: '--release -i 3.7 3.8 3.9 3.10 -o dist'

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    needs: test-python
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          command: build
          args: '--release -i 3.7 3.8 3.9 3.10 -o dist'

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  macos:
    needs: test-python
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          command: build
          args: '--release -i 3.7 3.8 3.9 3.10 -o dist --universal2'

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    needs: [macos, windows, linux-x86, linux-i686, linux-armv7, linux-aarch64, test-python]

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: wheels

      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
